/**
 * Cross-Subdomain Storage Sync Middleware
 *
 * Syncs localStorage and/or sessionStorage across subdomains using cookies on the parent domain.
 * This allows data stored in storage on one subdomain (e.g., app.example.com)
 * to be accessible on another subdomain (e.g., admin.example.com).
 *
 * Features:
 * - Support for localStorage, sessionStorage, or both
 * - Configurable overwrite behavior for existing keys
 * - Automatic bi-directional sync
 * - Configurable sync keys
 * - Debug mode and comprehensive error handling
 *
 * @version 2.0.0
 * @license MIT
 */
!function(){"use strict";const e={cookiePrefix:"sds_sync_",cookieMaxAge:31536e3,syncKeys:[],overwriteExisting:!1,storageType:"localStorage",debug:!1};function t(...t){if(e.debug)try{console.log("[Storage Sync]",...t)}catch(e){}}function o(...e){try{console.error("[Storage Sync]",...e)}catch(e){}}function n(...t){if(e.debug)try{console.warn("[Storage Sync]",...t)}catch(e){}}function r(){try{if("undefined"==typeof Storage)return o("Storage is not supported in this environment"),!1;if("undefined"==typeof localStorage)return o("localStorage is not available"),!1;if(("sessionStorage"===e.storageType||"both"===e.storageType)&&"undefined"==typeof sessionStorage)return o("sessionStorage is not available but is required by configuration"),!1;if("undefined"==typeof document||void 0===document.cookie)return o("Cookies are not supported in this environment"),!1;try{const e="__storage_sync_test__";localStorage.setItem(e,"test"),localStorage.removeItem(e)}catch(e){return o("localStorage is not writable:",e.message),!1}return!0}catch(e){return o("Environment check failed:",e),!1}}function i(e){if("string"!=typeof e)return n("Key must be a string, got:",typeof e),null;if(0===e.length)return n("Key cannot be empty"),null;if(e.length>200)return n("Key is too long (max 200 characters):",e.length),null;const t=e.replace(/[;,\s=]/g,"_");return t!==e&&n(`Key was sanitized from "${e}" to "${t}"`),t}function s(){const e=window.location.hostname;if("localhost"===e||/^\d+\.\d+\.\d+\.\d+$/.test(e))return e;const t=e.split(".");return t.length>2?`.${t.slice(-2).join(".")}`:`.${e}`}function a(e){return e===localStorage?"localStorage":"sessionStorage"}function c(t){return!!t&&(0===e.syncKeys.length||e.syncKeys.some(e=>"string"==typeof e?e===t:e instanceof RegExp&&e.test(t)))}function l(r,a){try{const c=i(r);if(!c)return o("writeToCookie: invalid key provided"),!1;const l=function(e){return null==e?"":("string"!=typeof e&&(n("Value was converted to string from:",typeof e),e=String(e)),e.length>3500?(o(`Value is too large for cookie storage (${e.length} chars, max 3500)`),null):e)}(a);if(null===l)return o("writeToCookie: invalid value provided"),!1;const g=e.cookiePrefix+c,u=s(),y=e.cookieMaxAge,d=encodeURIComponent(l);return document.cookie=`${g}=${d}; max-age=${y}; domain=${u}; path=/; SameSite=Lax`,t(`Wrote to cookie: ${c} on domain ${u}`),!0}catch(e){return o(`Failed to write cookie for key "${r}":`,e),!1}}function g(n){try{const r=i(n);if(!r)return o("deleteFromCookie: invalid key provided"),!1;const a=e.cookiePrefix+r,c=s();return document.cookie=`${a}=; max-age=0; domain=${c}; path=/; SameSite=Lax`,t(`Deleted cookie: ${r} from domain ${c}`),!0}catch(e){return o(`Failed to delete cookie for key "${n}":`,e),!1}}function u(){const t=document.cookie.split(";"),n={};try{for(const o of t){const t=o.trim(),r=t.indexOf("=");if(-1===r)continue;const i=t.substring(0,r),s=t.substring(r+1);if(i&&i.startsWith(e.cookiePrefix)){n[i.substring(e.cookiePrefix.length)]=decodeURIComponent(s||"")}}}catch(e){o("Failed to get sync cookies:",e)}return n}function y(){t("Syncing cookies to storage...");const n=u(),r=function(){const t=[];return"localStorage"!==e.storageType&&"both"!==e.storageType||t.push(localStorage),"sessionStorage"!==e.storageType&&"both"!==e.storageType||t.push(sessionStorage),t}();let i=0;const s=[],l=[];for(const g of r){const r=a(g);let u=0;for(const[i,a]of Object.entries(n)){if(!c(i))continue;const n=g.getItem(i);if((e.overwriteExisting||null===n)&&a)try{d.call(g,i,a),u++,s.push({key:i,storageType:r,overwritten:null!==n}),t(`Synced from cookie to ${r}: ${i}${e.overwriteExisting&&null!==n?" (overwritten)":""}`)}catch(e){o(`Error syncing "${i}" to ${r}:`,e)}else null===n||e.overwriteExisting||(l.push({key:i,storageType:r,reason:"exists"}),t(`Skipped syncing "${i}" to ${r}: key exists and overwriteExisting is false`))}t(`Synced ${u} items from cookies to ${r}`),i+=u}t(`Total synced: ${i} items across all storage types`),function(e){try{const o=new CustomEvent("storagesynccomplete",{detail:e,bubbles:!0,cancelable:!1});window.dispatchEvent(o),t("Dispatched storagesynccomplete event")}catch(e){o("Failed to dispatch sync complete event:",e)}}({syncedCount:i,syncedKeys:s,skippedKeys:l,totalCookies:Object.keys(n).length})}const d=Storage.prototype.setItem,f=Storage.prototype.removeItem,p=Storage.prototype.clear;function m(){try{if(t("Initializing cross-subdomain storage sync"),!r())return o("Environment not supported, initialization aborted"),!1;t("Parent domain:",s()),t("Storage type:",e.storageType),t("Overwrite existing:",e.overwriteExisting),t("Debug mode:",e.debug);return function(){let t=!0;const n=["localStorage","sessionStorage","both"];return n.includes(e.storageType)||(o(`Invalid storageType: ${e.storageType}. Must be one of: ${n.join(", ")}`),e.storageType="localStorage",t=!1),"boolean"!=typeof e.overwriteExisting&&(o("overwriteExisting must be a boolean, got:",typeof e.overwriteExisting),e.overwriteExisting=!1,t=!1),"boolean"!=typeof e.debug&&(o("debug must be a boolean, got:",typeof e.debug),e.debug=!1,t=!1),"string"==typeof e.cookiePrefix&&0!==e.cookiePrefix.length||(o("cookiePrefix must be a non-empty string"),e.cookiePrefix="ls_sync_",t=!1),("number"!=typeof e.cookieMaxAge||e.cookieMaxAge<=0)&&(o("cookieMaxAge must be a positive number"),e.cookieMaxAge=31536e3,t=!1),Array.isArray(e.syncKeys)?e.syncKeys=e.syncKeys.filter(e=>"string"==typeof e||e instanceof RegExp?"string"!=typeof e||0!==e.length||(o("syncKeys cannot contain empty strings"),!1):(o("syncKeys must contain only strings or RegExp patterns, found:",typeof e),!1)):(o("syncKeys must be an array"),e.syncKeys=[],t=!1),t}()||n("Configuration had issues but was corrected with fallback values"),y(),window.addEventListener("storage",o=>{t("Storage event detected"),t("  Key:",o.key),t("  Old value:",o.oldValue),t("  New value:",o.newValue),t("  Storage area:",o.storageArea===localStorage?"localStorage":"sessionStorage");const n=o.storageArea===localStorage,r=o.storageArea===sessionStorage;n&&("localStorage"===e.storageType||"both"===e.storageType)||r&&("sessionStorage"===e.storageType||"both"===e.storageType)?o.key&&c(o.key)?null===o.newValue?g(o.key):l(o.key,o.newValue):null===o.key&&t((n?"localStorage":"sessionStorage")+" was cleared"):t("Storage change ignored: storage type not configured for syncing")}),function(){function t(t){const o=t===localStorage,n=t===sessionStorage;return o&&("localStorage"===e.storageType||"both"===e.storageType)||n&&("sessionStorage"===e.storageType||"both"===e.storageType)}Storage.prototype.setItem=function(e,n){try{d.call(this,e,n),t(this)&&c(e)&&l(e,n)}catch(t){throw o(`Error in setItem for key "${e}":`,t),t}},Storage.prototype.removeItem=function(e){try{f.call(this,e),t(this)&&c(e)&&g(e)}catch(t){throw o(`Error in removeItem for key "${e}":`,t),t}},Storage.prototype.clear=function(){try{if(t(this)){const e=Object.keys(this);p.call(this),e.forEach(e=>{c(e)&&g(e)})}else p.call(this)}catch(e){throw o("Error in clear:",e),e}}}(),t("Initialization complete"),!0}catch(e){return o("Failed to initialize:",e),!1}}let k,h=m();const S=new Promise(e=>{k=e});window.addEventListener("storagesynccomplete",e=>{k&&(k(e.detail),k=null)}),window.StorageSync={writeToCookie:l,readFromCookie:function(t){try{const n=i(t);if(!n)return o("readFromCookie: invalid key provided"),null;const r=e.cookiePrefix+n;if(!document.cookie)return null;const s=document.cookie.split(";");for(const e of s){const n=e.trim(),i=n.indexOf("=");if(-1===i)continue;const s=n.substring(0,i),a=n.substring(i+1);if(s===r)try{return decodeURIComponent(a)}catch(e){return o(`Failed to decode cookie value for key "${t}":`,e),null}}return null}catch(e){return o(`Failed to read cookie for key "${t}":`,e),null}},deleteFromCookie:g,syncCookiesToStorage:y,syncCookiesToLocalStorage:y,getAllSyncCookies:u,clearAllSyncCookies:function(){try{const e=u();let o=0;for(const t in e)Object.prototype.hasOwnProperty.call(e,t)&&g(t)&&o++;return t(`Cleared ${o} sync cookies`),o}catch(e){return o("Failed to clear sync cookies:",e),0}},isInitialized:()=>h,isSupported:r,reinitialize:()=>{try{return h=m(),h}catch(e){return o("Reinitialization failed:",e),!1}},ready:()=>S,config:e,version:"2.0.0"}}();